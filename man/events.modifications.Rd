% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/events.modifications.R
\name{events.modifications}
\alias{events.modifications}
\alias{modification}
\alias{modification,}
\alias{random.extinction,}
\alias{trait.extinction,}
\alias{update.bd.params,}
\alias{update.traits,}
\alias{update.modifiers,}
\alias{founding.event}
\title{events.modifications}
\usage{
modification(x, ...)
}
\arguments{
\item{x}{a numerical value to update.}

\item{...}{any specific argument for the modification (see details).}
}
\description{
Inbuilt modifications functions for helping designing events
}
\details{
The following functions allow to design specific modifications for events:

\itemize{
     
\item modifications for the target \code{"taxa"}
     \itemize{
         \item \code{random.extinction}: this function removes (makes extinct) a proportion of living taxa when the event is triggered. The proportion of taxa to remove can be changed with the argument \code{x}. 
         \item \code{trait.extinction}: this function removes (makes extinct) a number of living taxa based on their trait(s) values when the event is triggered. The trait value is specified with the argument \code{x}. You can specify the condition in relation to that trait value with \code{condition} (the default is \code{condition = `<`} meaning taxa with a trait value lower that \code{x} will go extinct) and which trait(s) to consider using \code{trait} (the default is \code{trait = 1}, meaning it will only consider the first trait).
     }

\item modifications for the target \code{"bd.params"}
     \itemize{
         \item \code{update.bd.params}: this function updates the birth death parameters within the birth death process. The value of the parameter to change is specified with the argument \code{x} and the argument to change is specified with the argument \code{parameter} (e.g. \code{parameter = "speciation"} will attribute the value \code{x} to \code{bd.params$speciation}).
     }

\item modifications for the target \code{"traits"} 
     \itemize{
         \item \code{update.traits}: this function updates a \code{"dads"} \code{"traits"} object. This function takes as arguments any arguments that can be updated in \code{\link{make.traits}}, namely \code{process}, \code{process.args} and \code{trait.names}.
     }

\item modifications for the target \code{"modifiers"}
     \itemize{
         \item \code{update.modifiers}: this function updates a \code{"dads"} \code{"modifiers"} object. This function takes as arguments any arguments that can be updated in \code{\link{make.modifiers}}, namely \code{branch.length}, \code{selection}, \code{speciation}, \code{condition} and \code{modify}.
     }

\item modifications for the target \code{"founding"} 
     \itemize{
         \item \code{founding.event}: this function runs an independent birth-death process when the condition is met. This function takes the arguments \code{"bd.params"}, \code{"traits"}, \code{"modifiers"} and \code{"events"} as they would normally be specified for the \code{\link{dads}} function. The \code{stop.rule} and other arguments are handled internally: namely the \code{stop.rule} argument is updated to match the time and number of taxa when the founding event is triggered. \emph{Note that this can lead to the simulation stopping just before reaching the \code{max.taxa} or \code{max.living} stop rule}.
     }
}


More details about the \code{events} functions is explained in the \code{dads} manual: \url{http://tguillerme.github.io/dads}.
}
\seealso{
\code{make.events}
}
\author{
Thomas Guillerme
}
