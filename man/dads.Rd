% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dads.R
\name{dads}
\alias{dads}
\title{Diversity and disparity simulator}
\usage{
dads(
  bd.params,
  stop.rule,
  traits = NULL,
  modifiers = NULL,
  events = NULL,
  null.error = FALSE
)
}
\arguments{
\item{bd.params}{A list of named parameters for the birth death process (see details).}

\item{stop.rule}{The rules on when to stop the simulation (see details).}

\item{traits}{The dads traits object (see \code{\link{make.traits}}).}

\item{modifiers}{The dads modifiers object (see \code{\link{make.modifiers}}).}

\item{events}{The dads events object (see \code{\link{make.events}}).}

\item{null.error}{Logical, whether to return an error when the birth death parameters fails to build a tree (\code{FALSE}; default and highly recommended) or whether to return \code{NULL} (\code{TRUE}). Can also be set to a integer value for the numbers of trials (see details).}
}
\description{
Simulating diversity and trait disparity
}
\details{
\code{bd.params} and \code{stop.rule} should me named lists to parametrise the birth-death tree. The names of the current handled parameters for each argument are:

\code{bd.params}: The birth death parameters are the parameters used to simulate the birth death process. The allowed parameters are:
\itemize{
  \item \code{speciation} The constant speciation rate (sometimes called lambda or birth parameter).
  \item \code{extinction} The constant extinction rate (sometimes called mu, death or background extinction parameter).
}

\code{stop.rule}: The rule(s) for when to stop the simulation. When multiple rules are given, the simulation stops when any rule is broken. The allowed rules are:
\itemize{
  \item \code{max.taxa}   The maximum number of taxa to reach (including extinct ones).
  \item \code{max.living} The maximum number of living (i.e. non extinct) to reach.
  \item \code{max.time}   The maximum amount of phylogenetic time to reach.
}

If \code{null.error} is set to a numeric value, the function will run multiple times until a correct tree is generated. Using this option can greatly increase computational time!
}
\examples{
## Setting some pure birth tree (no extinction) parameters
my_bd_params <- list(speciation = 1)
## Setting some stopping rule (stop when reaching 10 taxa)
my_stop_rule <- list(max.taxa = 10) 

## Run a birth tree without traits
a_tree <- dads(bd.params = my_bd_params,
               stop.rule = my_stop_rule)
## Plotting the results
plot(a_tree)

## Adding some extinction parameter
my_bd_params$extinction <- 1/3

## Getting a simple trait (default Brownian motion)
my_trait <- make.traits()

## Run a birth-death tree with traits
dads(bd.params = my_bd_params,
     stop.rule = my_stop_rule,
     traits    = my_traits)


}
\seealso{

}
\author{
Thomas Guillerme
}
